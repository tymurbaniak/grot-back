version: '3.4'

services:
  grot-mysql:
    container_name: grot-mysql
    restart: always
    image: mysql
    volumes:
      - ./test-sql-2:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: grot
      MYSQL_USER: grot
      MYSQL_PASSWORD: grot
  grot-migrations:
    container_name: grot-migrations
    image: ${DOCKER_REGISTRY-}grot-migrations
    links:
      - grot-mysql
    build:
      context: .
      dockerfile: GrotMigrations/Dockerfile
    depends_on: 
      - grot-mysql    
  grot-api:
    container_name: grot-api
    image: ${DOCKER_REGISTRY-}grot-api
    links:
      - grot-mysql
    build:
      context: .
      dockerfile: GrotWebApi/Dockerfile
      args:
        - Mode=Debug
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker      
      - ASPNETCORE_URLS=http://+:80
  grot-front:
    container_name: grot-front
    image: ${DOCKER_REGISTRY-}grot-front
    links:
      - grot-api
    environment:
      - ENV_BACKEND_URI='http://localhost/api'
      - ENV_IS_PRODUCTION=false
    build:
      context: .
      dockerfile: grot-front/Dockerfile
    depends_on: 
      - grot-api
  grot-proxy:
    container_name: grot-proxy
    image: ${DOCKER_REGISTRY-}grot-proxy
    build:
      context: .
      dockerfile: Proxy/Dockerfile
    depends_on: 
      - grot-api
      - grot-front
    ports:
      - "80:80"
      - "443:443"
  